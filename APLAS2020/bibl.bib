% BETA

@article{DPB7578,
	author = {Bent Kristensen and Ole Madsen and Birger Møller-Pedersen and Kristen Nygaard},
	title = {The {BETA} Programming Language},
	journal = {DAIMI Report Series},
	volume = {16},
	number = {229},
	year = {1987},
	keywords = {},
	abstract = {The BETA programming language is a modern language in the SIMULA 67 tradition.  It supports the object-oriented perspective on programming and contains comprehensive facilities for procedural and functional programming. BETA replaces classes, procedures, functions and types by a single abstraction mechanism called the pattern. Patterns may be organized in a classification hierarchy by means of sub-patterns. The notion of virtual procedure is generalized to virtual pattern. Virtual patterns combined with sub-patterns make it possible to delay the specification of an attribute in a pattern. Attributes may then have different bindings in different sub-patterns. BETA also provides a unified framework for sequential, coroutine and concurrent execution.This paper is a tutorial introduction to BETA.},
	issn = {2245-9316},	doi = {10.7146/dpb.v16i229.7578},
	url = {http://ojs.statsbiblioteket.dk/index.php/daimipb/article/view/7578}
} 

@inproceedings{Madsen:1989:VCP:74877.74919,
 author = {Madsen, O. L. and Moller-Pedersen, B.},
 title = {Virtual Classes: A Powerful Mechanism in Object-oriented Programming},
 booktitle = {Conference Proceedings on Object-oriented Programming Systems, Languages and Applications},
 series = {OOPSLA '89},
 year = {1989},
 isbn = {0-89791-333-7},
 location = {New Orleans, Louisiana, USA},
 pages = {397--406},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/74877.74919},
 doi = {10.1145/74877.74919},
 acmid = {74919},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

%% Parametric Polymorphism

@inproceedings{Grigore:2017:JGT:3009837.3009871,
 author = {Grigore, Radu},
 title = {Java Generics Are Turing Complete},
 booktitle = {Proceedings of the 44th ACM SIGPLAN Symposium on Principles of Programming Languages},
 series = {POPL 2017},
 year = {2017},
 isbn = {978-1-4503-4660-3},
 location = {Paris, France},
 pages = {73--85},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/3009837.3009871},
 doi = {10.1145/3009837.3009871},
 acmid = {3009871},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Java, Turing machine, decidability, fluent interface, parser generator, subtype checking},
}

@inproceedings{Amin:2016:JST:2983990.2984004,
 author = {Amin, Nada and Tate, Ross},
 title = {Java and Scala's Type Systems Are Unsound: The Existential Crisis of Null Pointers},
 booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA 2016},
 year = {2016},
 isbn = {978-1-4503-4444-9},
 location = {Amsterdam, Netherlands},
 pages = {838--848},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2983990.2984004},
 doi = {10.1145/2983990.2984004},
 acmid = {2984004},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Existential, Java, Null, Scala, Unsoundness},
} 

@InProceedings{cameron2008,
author="Cameron, Nicholas
and Drossopoulou, Sophia
and Ernst, Erik",
editor="Vitek, Jan",
title="A Model for Java with Wildcards",
booktitle="ECOOP 2008 -- Object-Oriented Programming",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="2--26",
abstract="Wildcards are a complex and subtle part of the Java type system, present since version 5.0. Although there have been various formalisations and partial type soundness results concerning wildcards, to the best of our knowledge, no system that includes all the key aspects of Java wildcards has been proven type sound. This paper establishes that Java wildcards are type sound. We describe a new formal model based on explicit existential types whose pack and unpack operations are handled implicitly, and prove it type sound. Moreover, we specify a translation from a subset of Java to our formal model, and discuss how several interesting aspects of the Java type system are handled.",
isbn="978-3-540-70592-5"
}



%DOT, Dotty and Scala

@inproceedings{Rompf:2016:TSD:2983990.2984008,
 author = {Rompf, Tiark and Amin, Nada},
 title = {Type Soundness for Dependent Object Types (DOT)},
 booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA 2016},
 year = {2016},
 isbn = {978-1-4503-4444-9},
 location = {Amsterdam, Netherlands},
 pages = {624--641},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/2983990.2984008},
 doi = {10.1145/2983990.2984008},
 acmid = {2984008},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {DOT, Scala, dependent object types, soundness},
}

@inproceedings{Amin:2014:FPT:2660193.2660216,
 author = {Amin, Nada and Rompf, Tiark and Odersky, Martin},
 title = {Foundations of Path-dependent Types},
 booktitle = {Proceedings of the 2014 ACM International Conference on Object Oriented Programming Systems Languages \& Applications},
 series = {OOPSLA '14},
 year = {2014},
 isbn = {978-1-4503-2585-1},
 location = {Portland, Oregon, USA},
 pages = {233--249},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/2660193.2660216},
 doi = {10.1145/2660193.2660216},
 acmid = {2660216},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {calculus, dependent types, objects},
}

@inproceedings{amin2012dependent,
  title={Dependent object types},
  author={Amin, Nada and Moors, Adriaan and Odersky, Martin},
  booktitle={19th International Workshop on Foundations of Object-Oriented Languages},
  number={EPFL-CONF-183030},
  year={2012}
}

@misc{dotty,
  title = {Dotty},
  howpublished = {\url{http://dotty.epfl.ch/}},
  note = {Accessed: 2019-04-21},
  	year = {2019}
}

@misc{typescript,
  title = {TypeScript Language Specification},
  howpublished = {\url{https://bit.ly/2WiID3E}},
  note = {Accessed: 2019-04-21},
  	year = {2019}
}

@misc{ecmascript,
  title = {ECMAScript Language Specification},
  howpublished = {\url{www.ecma-international.org/}},
  note = {Accessed: 2019-04-21},
  	year = {2019}
}

@MISC{haskell2010,
    author = {Simon Marlow},
    title = {Haskell 2010 Language Report},
    year = {}
}

@misc{csharp,
  title = {C\# Language Specification},
  howpublished = {\url{https://bit.ly/30UG9qC}},
  note = {Accessed: 2019-04-21},
  	year = {2019}
}

@misc{ocaml,
  title = {The OCaml system release},
 	author = {Damien Doligez, Alain Frisch, Jacques Garrigue, Didier Rémy and Jérôme Vouillon},
  howpublished = {\url{caml.inria.fr/pub/docs/manual-ocaml/}},
  note = {Accessed: 2019},
  	year = {2019}
}




@misc{odersky2004scala,
  title={The Scala language specification},
  author={Odersky, Martin and Altherr, Philippe and Cremet, Vincent and Emir, Burak and Micheloud, Stphane and Mihaylov, Nikolay and Schinz, Michel and Stenman, Erik and Zenger, Matthias},
  year={2004}
}

@inproceedings{Odersky:2005:SCA:1094811.1094815,
 author = {Odersky, Martin and Zenger, Matthias},
 title = {Scalable Component Abstractions},
 booktitle = {Proceedings of the 20th Annual ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA '05},
 year = {2005},
 isbn = {1-59593-031-0},
 location = {San Diego, CA, USA},
 pages = {41--57},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/1094811.1094815},
 doi = {10.1145/1094811.1094815},
 acmid = {1094815},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Scala, abstract types, classes, components, mixins},
} 

@article{Rapoport:2017:SSP:3152284.3133870,
 author = {Rapoport, Marianna and Kabir, Ifaz and He, Paul and Lhot\'{a}k, Ond\v{r}ej},
 title = {A Simple Soundness Proof for Dependent Object Types},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {October 2017},
 volume = {1},
 number = {OOPSLA},
 month = oct,
 year = {2017},
 issn = {2475-1421},
 pages = {46:1--46:27},
 articleno = {46},
 numpages = {27},
 url = {http://doi.acm.org/10.1145/3133870},
 doi = {10.1145/3133870},
 acmid = {3133870},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {DOT calculus, Scala, dependent object types, type safety},
} 

%Tate

@inproceedings{Greenman:2014:GFP:2594291.2594308,
 author = {Greenman, Ben and Muehlboeck, Fabian and Tate, Ross},
 title = {Getting F-bounded Polymorphism into Shape},
 booktitle = {Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '14},
 year = {2014},
 isbn = {978-1-4503-2784-8},
 location = {Edinburgh, United Kingdom},
 pages = {89--99},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2594291.2594308},
 doi = {10.1145/2594291.2594308},
 acmid = {2594308},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {F-bounded polymorphism, decidability, higher-kinded types, joins, materials, separation, shapes, subtyping, variance},
} 

@inproceedings{Tate:2011:TWJ:1993498.1993570,
 author = {Tate, Ross and Leung, Alan and Lerner, Sorin},
 title = {Taming Wildcards in Java's Type System},
 booktitle = {Proceedings of the 32Nd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '11},
 year = {2011},
 isbn = {978-1-4503-0663-8},
 location = {San Jose, California, USA},
 pages = {614--627},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1993498.1993570},
 doi = {10.1145/1993498.1993570},
 acmid = {1993570},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {existential types, joins, parametric types, single-instantiation inheritance, subtyping, type inference, wildcards},
}

%Wyvern

@article{lidelegation,
  title={Delegation vs Inheritance for Typestate Analysis},
  author={Li, Du and Potanin, Alex and Aldrich, Jonathan}
}

@inproceedings{lee2015theory,
  title={A theory of tagged objects},
  author={Lee, Joseph and Aldrich, Jonathan and Shaw, Troy and Potanin, Alex},
  booktitle={LIPIcs-Leibniz International Proceedings in Informatics},
  volume={37},
  year={2015},
  organization={Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik}
}

@inproceedings{Nistor:2013:WST:2489828.2489830,
 author = {Nistor, Ligia and Kurilova, Darya and Balzer, Stephanie and Chung, Benjamin and Potanin, Alex and Aldrich, Jonathan},
 title = {Wyvern: A Simple, Typed, and Pure Object-oriented Language},
 booktitle = {Proceedings of the 5th Workshop on MechAnisms for SPEcialization, Generalization and inHerItance},
 series = {MASPEGHI '13},
 year = {2013},
 isbn = {978-1-4503-2046-7},
 location = {Montpellier, France},
 pages = {9--16},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/2489828.2489830},
 doi = {10.1145/2489828.2489830},
 acmid = {2489830},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {first-class classes, object-oriented, static type checking},
} 


@misc{wyvern,
  title = {The {W}yvern {P}rogramming {L}anguage},
  howpublished = {\url{http://wyvernlang.github.io/}},
  note = {Accessed: 2019-04-21}
}

@inproceedings{Omar:2014:SCT:2945642.2945649,
 author = {Omar, Cyrus and Kurilova, Darya and Nistor, Ligia and Chung, Benjamin and Potanin, Alex and Aldrich, Jonathan},
 title = {Safely Composable Type-Specific Languages},
 booktitle = {Proceedings of the 28th European Conference on ECOOP 2014 --- Object-Oriented Programming - Volume 8586},
 year = {2014},
 isbn = {978-3-662-44201-2},
 pages = {105--130},
 numpages = {26},
 url = {http://dx.doi.org/10.1007/978-3-662-44202-9\_5},
 doi = {10.1007/978-3-662-44202-9\_5},
 acmid = {2945649},
 publisher = {Springer-Verlag New York, Inc.},
 address = {New York, NY, USA},
 keywords = {bidirectional typechecking, extensible languages, hygiene, parsing},
} 

%% other

@article{jonesobject,
  title={Object Inheritance Without Classes},
  author={Jones, Timothy and Homer, Michael and Noble, James and Bruce, Kim}
}

@inproceedings{jones2015brand,
  title={Brand objects for nominal typing},
  author={Jones, Timothy and Homer, Michael and Noble, James},
  booktitle={LIPIcs-Leibniz International Proceedings in Informatics},
  volume={37},
  year={2015},
  organization={Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik}
}

@article{Igarashi:2001:FJM:503502.503505,
 author = {Igarashi, Atsushi and Pierce, Benjamin C. and Wadler, Philip},
 title = {Featherweight Java: A Minimal Core Calculus for Java and GJ},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {May 2001},
 volume = {23},
 number = {3},
 month = may,
 year = {2001},
 issn = {0164-0925},
 pages = {396--450},
 numpages = {55},
 url = {http://doi.acm.org/10.1145/503502.503505},
 doi = {10.1145/503502.503505},
 acmid = {503505},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Compilation, Java, generic classes, language design, language semantics},
} 

% ML Bob Harper Book

@book{Harper:2012:PFP:2431407,
 author = {Harper, Robert},
 title = {Practical Foundations for Programming Languages},
 year = {2012},
 isbn = {1107029570, 9781107029576},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@Book{StandardML,
  author =	 {Robin Milner and Robert Harper and David MacQueen and Mads Tofte},
  title =	 {The Definition of Standard ML, Revised Edition},
  publisher =	 {MIT Press},
  year =	 1997
}

@Article{Biagioni2001,
author="Biagioni, Edoardo
and Harper, Robert
and Lee, Peter",
title="A Network Protocol Stack in Standard ML",
journal="Higher-Order and Symbolic Computation",
year="2001",
volume="14",
number="4",
pages="309--356",
abstract="The FoxNet is an implementation of the standard TCP/IP networking protocol stack using the Standard ML (SML) language. SML is a type-safe programming language with garbage collection, a unique and advanced module system, and machine-independent semantics. The FoxNet is a user-space implementation of TCP/IP that is built in SML by composing modular protocol elements; each element independently implements one of the standard protocols. One specific combination of these elements implements the standard TCP/IP stack. Other combinations are also possible and can be used to easily and conveniently build custom, non-standard networking stacks. This paper describes in detail the final design and implementation of the FoxNet, including many of the details that are crucially affected by the choice of SML as the programming language.",
issn="1573-0557",
doi="10.1023/A:1014403914699",
url="http://dx.doi.org/10.1023/A:1014403914699"
}

%f-sub

@InProceedings{cardelli1991,
author="Cardelli, Luca
and Martini, Simone
and Mitchell, John C.
and Scedrov, Andre",
editor="Ito, Takayasu
and Meyer, Albert R.",
title="An extension of system F with subtyping",
booktitle="Theoretical Aspects of Computer Software",
year="1991",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="750--770",
abstract="System F is a well-known typed $\lambda$-calculus with polymorphic types, which provides a basis for polymorphic programming languages. We study an extension of F, called F<:, that combines parametric polymorphism with subtyping.",
isbn="978-3-540-47617-7"
}

@INPROCEEDINGS{113761, 
author={M. {Abadi} and G. D. {Plotkin}}, 
booktitle={[1990] Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science}, 
title={A PER model of polymorphism and recursive types}, 
year={1990}, 
volume={}, 
number={}, 
pages={355-365}, 
keywords={equivalence classes;formal languages;recursive functions;partial orders;O-category;PER model;polymorphism;recursive types;polymorphic lambda calculus;recursive definition;partial equivalence relations;CPO;inverse-limits;recursion;intersection;Computer science;Buildings;Logic;Equations}, 
doi={10.1109/LICS.1990.113761}, 
ISSN={}, 
month={June},
}

@inproceedings{Pierce:1992:BQU:143165.143228,
 author = {Pierce, Benjamin C.},
 title = {Bounded Quantification is Undecidable},
 booktitle = {Proceedings of the 19th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '92},
 year = {1992},
 isbn = {0-89791-453-8},
 location = {Albuquerque, New Mexico, USA},
 pages = {305--315},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/143165.143228},
 doi = {10.1145/143165.143228},
 acmid = {143228},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@book{Pierce:2002:TPL:509043,
 author = {Pierce, Benjamin C.},
 title = {Types and Programming Languages},
 year = {2002},
 isbn = {0262162091, 9780262162098},
 edition = {1st},
 publisher = {The MIT Press},
} 

@book{Hindley:1997:BST:265082,
 author = {Hindley, J. Roger},
 title = {Basic Simple Type Theory},
 year = {1997},
 isbn = {0-521-46518-4},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@article{10.2307/2266170,
 ISSN = {00224812},
 URL = {http://www.jstor.org/stable/2266170},
 author = {Alonzo Church},
 journal = {The Journal of Symbolic Logic},
 number = {2},
 pages = {56--68},
 publisher = {Association for Symbolic Logic},
 title = {A Formulation of the Simple Theory of Types},
 volume = {5},
 year = {1940}
}

@inproceedings{Reynolds:1974:TTT:647323.721503,
 author = {Reynolds, John C.},
 title = {Towards a Theory of Type Structure},
 booktitle = {Programming Symposium, Proceedings Colloque Sur La Programmation},
 year = {1974},
 isbn = {3-540-06859-7},
 pages = {408--423},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=647323.721503},
 acmid = {721503},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@book{Girard:1989:PT:64805,
 author = {Girard, Jean-Yves and Taylor, Paul and Lafont, Yves},
 title = {Proofs and Types},
 year = {1989},
 isbn = {0-521-37181-3},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@inproceedings{Morris:1973:TS:512927.512938,
 author = {Morris,Jr., James H.},
 title = {Types Are Not Sets},
 booktitle = {Proceedings of the 1st Annual ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
 series = {POPL '73},
 year = {1973},
 location = {Boston, Massachusetts},
 pages = {120--124},
 numpages = {5},
 url = {http://doi.acm.org/10.1145/512927.512938},
 doi = {10.1145/512927.512938},
 acmid = {512938},
 publisher = {ACM},
 address = {New York, NY, USA},
}  

@article{Cardelli:1987:BPT:34879.34882,
 author = {Cardelli, Luca},
 title = {Basic Polymorphic Typechecking},
 journal = {Sci. Comput. Program.},
 issue_date = {April 1, 1987},
 volume = {8},
 number = {2},
 month = apr,
 year = {1987},
 issn = {0167-6423},
 pages = {147--172},
 numpages = {26},
 url = {http://dx.doi.org/10.1016/0167-6423(87)90019-0},
 doi = {10.1016/0167-6423(87)90019-0},
 acmid = {34882},
 publisher = {Elsevier North-Holland, Inc.},
 address = {Amsterdam, The Netherlands, The Netherlands},
} 

@inproceedings{Liskov:1987:KAD:62138.62141,
 author = {Liskov, Barbara},
 title = {Keynote Address - Data Abstraction and Hierarchy},
 booktitle = {Addendum to the Proceedings on Object-oriented Programming Systems, Languages and Applications (Addendum)},
 series = {OOPSLA '87},
 year = {1987},
 isbn = {0-89791-266-7},
 location = {Orlando, Florida, USA},
 pages = {17--34},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/62138.62141},
 doi = {10.1145/62138.62141},
 acmid = {62141},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@book{Gamma:1995:DPE:186897,
 author = {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John},
 title = {Design Patterns: Elements of Reusable Object-oriented Software},
 year = {1995},
 isbn = {0-201-63361-2},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
} 


@InProceedings{SCALA17p2,
  author    = {Abel Nieto},
  title     = {Towards Algorithmic Typing for DOT (Short Paper)},
  booktitle = {Proc.\ SCALA},
  publisher = {ACM},
  pages     = {2--7},
  doi       = {10.1145/3136000.3136003},
  year      = {2017},
}

% Coq Souce for Decidable Wyvern



@misc{coq_src,
  title = {Decidable Wyvern Coq Sources},
  howpublished = {\url{https://goo.gl/WvfnHv}}
}

@misc{technicalReport,
  title = {Decidable Wyvern Technical Report},
  howpublished = {\url{https://goo.gl/v5kVD6}}
  }
  
@inproceedings{Chang:2017:LTC:3136000.3136006,
 author = {Chang, Adelbert},
 title = {The Limitations of Type Classes As Subtyped Implicits (Short Paper)},
 booktitle = {Proceedings of the 8th ACM SIGPLAN International Symposium on Scala},
 series = {SCALA 2017},
 year = {2017},
 isbn = {978-1-4503-5529-2},
 location = {Vancouver, BC, Canada},
 pages = {8--12},
 numpages = {5},
 url = {http://doi.acm.org/10.1145/3136000.3136006},
 doi = {10.1145/3136000.3136006},
 acmid = {3136006},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Scala, implicits, subtyping, type classes},
} 

@inproceedings{Wadler:1989:MAP:75277.75283,
 author = {Wadler, P. and Blott, S.},
 title = {How to Make Ad-hoc Polymorphism Less Ad Hoc},
 booktitle = {Proceedings of the 16th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '89},
 year = {1989},
 isbn = {0-89791-294-2},
 location = {Austin, Texas, USA},
 pages = {60--76},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/75277.75283},
 doi = {10.1145/75277.75283},
 acmid = {75283},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@phdthesis{Blo92,
  author = {S. Blott},
  title = {An Approach to Overloading with Polymorphism},
  school = {Department of Computing, University of Glasgow},
  year = {1992},
  month = dec
}

@article{Hall:1996:TCH:227699.227700,
 author = {Hall, Cordelia V. and Hammond, Kevin and Peyton Jones, Simon L. and Wadler, Philip L.},
 title = {Type Classes in Haskell},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {March 1996},
 volume = {18},
 number = {2},
 month = mar,
 year = {1996},
 issn = {0164-0925},
 pages = {109--138},
 numpages = {30},
 url = {http://doi.acm.org/10.1145/227699.227700},
 doi = {10.1145/227699.227700},
 acmid = {227700},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Haskell, functional programming, type classes, types},
} 

@inproceedings{Wehr:2008:MMH:1485346.1485360,
 author = {Wehr, Stefan and Chakravarty, Manuel M.},
 title = {ML Modules and Haskell Type Classes: A Constructive Comparison},
 booktitle = {Proceedings of the 6th Asian Symposium on Programming Languages and Systems},
 series = {APLAS '08},
 year = {2008},
 isbn = {978-3-540-89329-5},
 location = {Bangalore, India},
 pages = {188--204},
 numpages = {17},
 url = {http://dx.doi.org/10.1007/978-3-540-89330-1_14},
 doi = {10.1007/978-3-540-89330-1_14},
 acmid = {1485360},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@InProceedings{shields2002first,
author = {Shields, Mark and Peyton Jones, Simon},
title = {First class modules for Haskell},
booktitle = {9th International Conference on Foundations of Object-Oriented Languages (FOOL 9), Portland, Oregon},
year = {2002},
month = {January},
abstract = {Though Haskell’s module language is quite weak, its core language is highly expressive. Indeed, it is tantalisingly close to being able to express much of the structure traditionally delegated to a seperate module language. However, the encodings are awkward, and some situations can’t be encoded at all. In this paper we reﬁne Haskell’s core language to support ﬁrst-class modules with many of the features of ML-style modules. Our proposal cleanly encodes signatures, structures and functors with the appropriate type abstraction and type sharing, and supports recursive modules. All of these features work across compilation units, and interact harmoniously with Haskell’s class system. Coupled with support for staged computation, we believe our proposal would be an elegant approach to run-time dynamic linking of structured code. Our work builds directly upon Jones’ work on parameterised signatures, Odersky and La¨ufer’s system of higher-ranked type annotations, Russo’s semantics of ML modules using ordinary existential and universal quantiﬁcation, and Odersky and Zenger’s work on nested types. We motivate the system by examples, and include a more formal presentation in the appendix.},
url = {https://www.microsoft.com/en-us/research/publication/first-class-modules-for-haskell/},
pages = {28-40},
edition = {9th International Conference on Foundations of Object-Oriented Languages (FOOL 9), Portland, Oregon},
}


@article{Amin:215280,
      title = {The Essence of Dependent Object Types},
      author = {Amin, Nada and Grütter, Karl Samuel and Odersky, Martin  and Rompf, Tiark and Stucki, Sandro},
      publisher = {Springer International Publishing},
      journal = {A List of Successes That Can Change the World: Essays  Dedicated to Philip Wadler on the Occasion of His 60th  Birthday},
      series = {Lecture Notes in Computer Science. 9600},
      pages = {249-272},
      year = {2016},
      abstract = {Focusing on path-dependent types, the paper develops  foundations for Scala from first principles. Starting from  a simple calculus D-&lt;: of dependent functions, it adds  records, intersections and recursion to arrive at DOT, a  calculus for dependent object types. The paper shows an  encoding of System F with subtyping in D-&lt;: and  demonstrates the expressiveness of DOT by modeling a range  of Scala constructs in it.},
}

@inproceedings{Ernst:2001:FP:646158.680013,
 author = {Ernst, Erik},
 title = {Family Polymorphism},
 booktitle = {Proceedings of the 15th European Conference on Object-Oriented Programming},
 series = {ECOOP '01},
 year = {2001},
 isbn = {3-540-42206-4},
 pages = {303--326},
 numpages = {24},
 url = {http://dl.acm.org/citation.cfm?id=646158.680013},
 acmid = {680013},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
} 

%Object orientated languages

@article{bruce1994, 
	title={A paradigmatic object-oriented programming language: Design, static typing and semantics},
	volume={4}, DOI={10.1017/S0956796800001039}, 
	number={2}, journal={Journal of Functional Programming}, 
	publisher={Cambridge University Press}, author={Bruce, Kim B.}, year={1994}, 
	pages={127–206}
}

@book{Gosling:2014:JLS:2636997,
 author = {Gosling, James and Joy, Bill and Steele, Guy L. and Bracha, Gilad and Buckley, Alex},
 title = {The Java Language Specification, Java SE 8 Edition},
 year = {2014},
 isbn = {013390069X, 9780133900699},
 edition = {1st},
 publisher = {Addison-Wesley Professional},
} 

%Inheritance

@inproceedings{Cook:1989:IS:96709.96721,
 author = {Cook, William R. and Hill, Walter and Canning, Peter S.},
 title = {Inheritance is Not Subtyping},
 booktitle = {Proceedings of the 17th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '90},
 year = {1990},
 isbn = {0-89791-343-4},
 location = {San Francisco, California, USA},
 pages = {125--135},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/96709.96721},
 doi = {10.1145/96709.96721},
 acmid = {96721},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

%Structural Subtyping

@inproceedings{Cardelli:1989:MTS:75277.75295,
 author = {Cardelli, L. and Donahue, J. and Jordan, M. and Kalsow, B. and Nelson, G.},
 title = {The Modula\&Ndash;3 Type System},
 booktitle = {Proceedings of the 16th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '89},
 year = {1989},
 isbn = {0-89791-294-2},
 location = {Austin, Texas, USA},
 pages = {202--212},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/75277.75295},
 doi = {10.1145/75277.75295},
 acmid = {75295},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@book{Nelson:1991:SPM:127967,
 editor = {Nelson, Greg},
 title = {Systems Programming with Modula-3},
 year = {1991},
 isbn = {0-13-590464-1},
 publisher = {Prentice-Hall, Inc.},
 address = {Upper Saddle River, NJ, USA},
}

@inproceedings{Mackay:2012:EFJ:2318202.2318206,
 author = {Mackay, Julian and Mehnert, Hannes and Potanin, Alex and Groves, Lindsay and Cameron, Nicholas},
 title = {Encoding Featherweight Java with Assignment and Immutability Using the Coq Proof Assistant},
 booktitle = {Proceedings of the 14th Workshop on Formal Techniques for Java-like Programs},
 series = {FTfJP '12},
 year = {2012},
 isbn = {978-1-4503-1272-1},
 location = {Beijing, China},
 pages = {11--19},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/2318202.2318206},
 doi = {10.1145/2318202.2318206},
 acmid = {2318206},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coq, automated theorem provers, immutability, type systems},
}  

@article{10.1145/3371077,
author = {Hu, Jason Z. S. and Lhot\'{a}k, Ond\v{r}ej},
title = {Undecidability of d<: And Its Decidable Fragments},
year = {2019},
issue_date = {January 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {POPL},
url = {https://doi.org/10.1145/3371077},
doi = {10.1145/3371077},
journal = {Proc. ACM Program. Lang.},
month = dec,
articleno = {9},
numpages = {30},
keywords = {Undecidability, $D_{<:}$, Algorithmic Typing, Dependent Object Types}
}

@article{10.1145/3371134,
author = {Mackay, Julian and Potanin, Alex and Aldrich, Jonathan and Groves, Lindsay},
title = {Decidable Subtyping for Path Dependent Types},
year = {2019},
issue_date = {January 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {POPL},
url = {https://doi.org/10.1145/3371134},
doi = {10.1145/3371134},
journal = {Proc. ACM Program. Lang.},
month = dec,
articleno = {66},
numpages = {27},
keywords = {Language Design, Functional Languages, Subtyping, Structural Subtyping, Decidability, Scala, Wyvern, Path Dependent Types, Object Oriented Languages, Nominal Subtyping}
}

  
@inproceedings{10.1145/174675.177844,
author = {Castagna, Giuseppe and Pierce, Benjamin C.},
title = {Decidable Bounded Quantification},
year = {1994},
isbn = {0897916360},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/174675.177844},
doi = {10.1145/174675.177844},
booktitle = {Proceedings of the 21st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {151–162},
numpages = {12},
location = {Portland, Oregon, USA},
series = {POPL ’94}
}

@inproceedings{10.1145/199448.199539,
author = {Castagna, Giuseppe and Pierce, Benjamin C.},
title = {Corrigendum: Decidable Bounded Quantification},
year = {1995},
isbn = {0897916921},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/199448.199539},
doi = {10.1145/199448.199539},
booktitle = {Proceedings of the 22nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {408},
numpages = {1},
location = {San Francisco, California, USA},
series = {POPL ’95}
}

@article{10.1006/inco.1994.1093,
author = {Wright, A.K. and Felleisen, M.},
title = {A Syntactic Approach to Type Soundness},
year = {1994},
issue_date = {Nov. 15, 1994},
publisher = {Academic Press, Inc.},
address = {USA},
volume = {115},
number = {1},
issn = {0890-5401},
url = {https://doi.org/10.1006/inco.1994.1093},
doi = {10.1006/inco.1994.1093},
journal = {Inf. Comput.},
month = nov,
pages = {38–94},
numpages = {57}
}

  


